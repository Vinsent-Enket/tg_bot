"""
–≠—Ç–æ –±—É–¥–µ—Ç –ø—Ä–æ—Å—Ç–æ –∫–æ–ø–∏–ø–∞—Å—Ç–∞ —Å —Å–∞–π—Ç–∞, https://mastergroosha.github.io/aiogram-3-guide/quickstart/
–ü–æ—Å—Ç–∞—Ä–∞–π—Å—è –¥–∞–≤–∞—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏, —á—Ç–æ –±—ã –≤—ã–±—Ä–∞—Ç—å –æ—Ç—Å—é–¥–∞ –ª—É—á—à–µ–µ –∏ —É–∂–µ –ø–æ—Ç–æ–º –¥–æ–±–∞–≤–∏—Ç—å –≤ –æ—Å–Ω–æ–≤—É
–í—Å–µ –∫–æ–º–∞–Ω–¥—ã –¥–æ–±–∞–≤—å –≤ /help
"""
import asyncio
import logging
from aiogram import Bot, Dispatcher, types
from aiogram.filters.command import Command
from datetime import datetime

"""
–ê–ø–¥–µ–π—Ç ‚Äî –ª—é–±–æ–µ —Å–æ–±—ã—Ç–∏–µ –∏–∑ —ç—Ç–æ–≥–æ —Å–ø–∏—Å–∫–∞: —Å–æ–æ–±—â–µ–Ω–∏–µ, —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è, –∫–æ–ª–±—ç–∫, –∏–Ω–ª–∞–π–Ω-–∑–∞–ø—Ä–æ—Å, –ø–ª–∞—Ç—ë–∂, –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –±–æ—Ç–∞ –≤ –≥—Ä—É–ø–ø—É –∏ —Ç.–¥.
–•—ç–Ω–¥–ª–µ—Ä ‚Äî –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–ª—É—á–∞–µ—Ç –æ—Ç –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞/—Ä–æ—É—Ç–µ—Ä–∞ –æ—á–µ—Ä–µ–¥–Ω–æ–π –∞–ø–¥–µ–π—Ç –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –µ–≥–æ.
–î–∏—Å–ø–µ—Ç—á–µ—Ä ‚Äî –æ–±—ä–µ–∫—Ç, –∑–∞–Ω–∏–º–∞—é—â–∏–π—Å—è –ø–æ–ª—É—á–µ–Ω–∏–µ–º –∞–ø–¥–µ–π—Ç–æ–≤ –æ—Ç Telegram —Å –ø–æ—Å–ª–µ–¥—É—é—â–∏–º –≤—ã–±–æ—Ä–æ–º —Ö—ç–Ω–¥–ª–µ—Ä–∞ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø—Ä–∏–Ω—è—Ç–æ–≥–æ –∞–ø–¥–µ–π—Ç–∞.
–†–æ—É—Ç–µ—Ä ‚Äî –∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ –¥–∏—Å–ø–µ—Ç—á–µ—Ä—É, –Ω–æ –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –ø–æ–¥–º–Ω–æ–∂–µ—Å—Ç–≤–æ –º–Ω–æ–∂–µ—Å—Ç–≤–∞ —Ö—ç–Ω–¥–ª–µ—Ä–æ–≤. –ú–æ–∂–Ω–æ —Å–∫–∞–∑–∞—Ç—å, —á—Ç–æ –¥–∏—Å–ø–µ—Ç—á–µ—Ä ‚Äî —ç—Ç–æ –∫–æ—Ä–Ω–µ–≤–æ–π —Ä–æ—É—Ç–µ—Ä.
–§–∏–ª—å—Ç—Ä ‚Äî –≤—ã—Ä–∞–∂–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –æ–±—ã—á–Ω–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç True –∏–ª–∏ False –∏ –≤–ª–∏—è–µ—Ç –Ω–∞ —Ç–æ, –±—É–¥–µ—Ç –≤—ã–∑–≤–∞–Ω —Ö—ç–Ω–¥–ª–µ—Ä –∏–ª–∏ –Ω–µ—Ç.
–ú–∏–¥–ª–≤–∞—Ä—å ‚Äî –ø—Ä–æ—Å–ª–æ–π–∫–∞, –∫–æ—Ç–æ—Ä–∞—è –≤–∫–ª–∏–Ω–∏–≤–∞–µ—Ç—Å—è –≤ –æ–±—Ä–∞–±–æ—Ç–∫—É –∞–ø–¥–µ–π—Ç–æ–≤.
"""

# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)

# –°–æ–∑–¥–∞–µ–º —Å–∞–º–æ–≥–æ –±–æ—Ç–∞
BOT_TOKEN = "6908027614:AAHCULVVrZBd7zKKK_2A9_weqXgY7rcR8to"  # TODO: –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è

bot = Bot(token=BOT_TOKEN)

# –î–∏—Å–ø–µ—Ç—á–µ—Ä
dp = Dispatcher()
dp['started_at'] = datetime.now().strftime('%Y-%m-%d %H:%M')


# –•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥—É /start
@dp.message(Command('start'))
async def cmd_start(message: types.Message):
    await message.answer('–ü—Ä–∏–≤–µ—Ç!\n'
                         '–î–ª—è –≤—ã–∑–æ–≤–∞ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥ –≤—ã–∑–æ–≤–∏ /help')


# —Ö—ç–Ω–¥–ª–µ—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥—É –•–µ–ª–ø
@dp.message(Command('help'))
async def hlp_command(message: types.Message):
    answer = ("–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é! \n"
              "–°–ø–∏—Å–æ–∫ –≤—Å–µ –∫–æ–º–∞–Ω–¥:\n"
              "/start - –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞ \n"  # –º–æ–∂–µ—Ç —Å–¥–µ–ª–∞—Ç—å –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫?
              "/help - –ø–æ–º–æ—â—å \n"
              "/test1 - –ø—Ä–æ—Å—Ç–æ –æ—Ç–≤–µ—Ç \n"
              "/test2 - –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ \n"
              "/add_to_list - –¥–æ–±–∞–≤–∏—Ç—å —á–∏—Å–ª–æ –≤ —Å–ø–∏—Å–æ–∫ \n"
              "/show_list - –ø–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ \n"
              "/info - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ"
              "/dice - –∫–∏–Ω—É—Ç—å –∫—É–±–∏–∫")
    await message.answer(answer)


"""
–ö–æ–º–∞–Ω–¥—ã –º–æ–∂–Ω–æ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–∞–∫ —Å—Ä–∞–∑—É —á–µ—Ä–µ–∑ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä, —Ç–∞–∫ –∏ –ø–æ–∑–∂–µ
"""


@dp.message(Command('test1'))
# –ø—Ä–æ—Å—Ç–æ–π –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ
async def test1_command(message: types.Message):
    await message.answer('–ø—Ä–æ—Å—Ç–æ –æ—Ç–≤–µ—Ç')


# –æ—Ç–≤–µ—Ç –∫–∞–∫ –±—É–¥—Ç–æ —á–µ—Ä–µ–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–µ –º–µ–Ω—é
async def test2_command(message: types.Message):
    await message.reply('–æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ')


@dp.message(Command('dice'))
async def cmd_dice(message: types.Message):
    await message.answer_dice(emoji="üé≤")


dp.message.register(test2_command, Command('test2'))


@dp.message(Command('add_to_list'))
async def cmd_add_to_list(message: types.Message, my_list: list[int]):
    my_list.append(7)
    print(my_list)
    await message.answer(f"–î–æ–±–∞–≤–ª–µ–Ω–æ —á–∏—Å–ª–æ 7")


@dp.message(Command('show_list'))
async def cmd_show_list(message: types.Message, my_list: list[int]):
    print(my_list)
    await message.answer(f"–°–ø–∏—Å–æ–∫: {my_list}")


@dp.message(Command('info'))
async def cmd_info(message: types.Message):
    await message.answer(f"–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω: {dp['started_at']}")


# –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Ü–µ—Å—Å–∞ –ø–æ–ª–ª–∏–Ω–≥–∞ (–æ–∂–∏–¥–∞–Ω–∏—è –∞–ø–¥–µ–π—Ç–æ–≤???)
async def main():
    # await dp.start_polling(bot)
    await dp.start_polling(bot, my_list=[1, 2, 3])


if __name__ == '__main__':
    asyncio.run(main())
