import os
from datetime import datetime

from aiogram import Bot, Dispatcher, types, F
from aiogram.client.default import DefaultBotProperties
from aiogram.enums import ParseMode
from aiogram.filters import Command, CommandObject, CommandStart
from aiogram.types import Message
from aiogram.utils.formatting import Bold, Text
from aiogram.types import LinkPreviewOptions


BOT_TOKEN = os.getenv('TG_BOT_TOKEN')

hello_text = ('–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, —è –±–æ—Ç <strong>–∞–≤—Ç–æ—Å–µ—Ä–≤–∏—Å–∞</strong>,'
              ' —Å –º–æ–µ–π –ø–æ–º–æ—â—å—é –≤—ã –º–æ–∂–µ—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –∑–≤–æ–Ω–æ–∫ –º–∞—Å—Ç–µ—Ä–∞')

about_text = '–ú—ã –Ω–∞—Ö–æ–¥–∏–º—Å—è –ø–æ –∞–¥—Ä–µ—Å—É - –ú–æ—Å–∫–≤–∞, –Ω–∞—à —Å–∞–π—Ç - https://www.test.ru'

# TODO: –°–¥–µ–ª–∞—Ç—å –∫–æ–º–∞–Ω–¥—É –¥–ª—è —Ç–∞–π–º–µ—Ä–∞ –∏ –±—É–¥–∏–ª—å–Ω–∏–∫–∞, –∫—Ä—á –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏–µ –∑–∞–¥–∞—á–∏

# TODO: –ü–æ –∑–∞–ø—Ä–æ—Å—É –ê–ª–µ–∫—Å–µ—è, –¥–æ–±–∞–≤–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É –∞–Ω–µ–∫–¥–æ—Ç–æ–≤ –ø–æ –Ω–æ–º–µ—Ä–∞–º (–µ—â–µ –∏ —Å–ª—É—á–∞–π–Ω–æ–≥–æ)
#  –∏ –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é –≤—ã—á–∏—Å–ª—è—Ç—å –ø–∏–¥–æ—Ä–∞ (–≤–æ—Ç —Ç–µ–±–µ –∏ –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏–µ –∑–∞–¥–∞—á–∏).

"""
—Ç–æ–ø html —Ä–∞–∑–º–µ—Ç–æ–∫

1. <p> ‚Äî –ø–∞—Ä–∞–≥—Ä–∞—Ñ.
2. <h1> ‚Äî –∑–∞–≥–æ–ª–æ–≤–æ–∫ –ø–µ—Ä–≤–æ–≥–æ —É—Ä–æ–≤–Ω—è.
3. <h2> ‚Äî –∑–∞–≥–æ–ª–æ–≤–æ–∫ –≤—Ç–æ—Ä–æ–≥–æ —É—Ä–æ–≤–Ω—è.
4. <h3> ‚Äî –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Ç—Ä–µ—Ç—å–µ–≥–æ —É—Ä–æ–≤–Ω—è.
5. <h4> ‚Äî –∑–∞–≥–æ–ª–æ–≤–æ–∫ —á–µ—Ç–≤–µ—Ä—Ç–æ–≥–æ —É—Ä–æ–≤–Ω—è.
6. <h5> ‚Äî –∑–∞–≥–æ–ª–æ–≤–æ–∫ –ø—è—Ç–æ–≥–æ —É—Ä–æ–≤–Ω—è.
7. <h6> ‚Äî –∑–∞–≥–æ–ª–æ–≤–æ–∫ —à–µ—Å—Ç–æ–≥–æ —É—Ä–æ–≤–Ω—è.
8. <br> ‚Äî –ø–µ—Ä–µ–Ω–æ—Å —Å—Ç—Ä–æ–∫–∏.
9. <strong> ‚Äî –≤—ã–¥–µ–ª–µ–Ω–∏–µ –∂–∏—Ä–Ω—ã–º —à—Ä–∏—Ñ—Ç–æ–º.
10. <em> ‚Äî –≤—ã–¥–µ–ª–µ–Ω–∏–µ –∫—É—Ä—Å–∏–≤–æ–º.
11. <img> ‚Äî –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ.
12. <a> ‚Äî –≥–∏–ø–µ—Ä—Å—Å—ã–ª–∫–∞.
13. <ul> ‚Äî –º–∞—Ä–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫.
14. <ol> ‚Äî –Ω—É–º–µ—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫.
15. <li> ‚Äî —ç–ª–µ–º–µ–Ω—Ç —Å–ø–∏—Å–∫–∞.
16. <div> ‚Äî –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∏ –¥—Ä—É–≥–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤.
17. <span> ‚Äî –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞.
18. <table> ‚Äî —Ç–∞–±–ª–∏—Ü–∞.
19. <tr> ‚Äî —Å—Ç—Ä–æ–∫–∞ —Ç–∞–±–ª–∏—Ü—ã.
20. <td> ‚Äî —è—á–µ–π–∫–∞ —Ç–∞–±–ª–∏—Ü—ã.
"""

"""

–°–≤–æ–∏ –ø–æ—è—Å–Ω–µ–Ω–∏—è:

–£ –Ω–∞—Å –µ—Å—Ç—å –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã

–£ –Ω–µ–≥–æ –µ—Å—Ç—å –¥–∏—Å–ø–µ—Ç—á–µ—Ä –∫–æ—Ç–æ—Ä—ã–π —Ä–µ–∞–≥–∏—Ä—É–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è


–†–∞–∑–±–µ—Ä–µ–º –ø—Ä–∏–º–µ—Ä–æ–º

@dp.message(Command(commands=["start"]))  - —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É "/start
async def process_start_command(message: Message):
    await message.answer(  - —É–∫–∞–∑—ã–≤–∞–µ–º —á—Ç–æ –±—É–¥–µ—Ç –≤ –æ—Ç–≤–µ—Ç–µ
        f'–ü—Ä–∏–≤–µ—Ç!\n–ú–µ–Ω—è –∑–æ–≤—É—Ç –≠—Ö–æ-–±–æ—Ç!\n–ù–∞–ø–∏—à–∏ –º–Ω–µ —á—Ç–æ-–Ω–∏–±—É–¥—å\n\n\n{message.model_dump_json(indent=4, 
        exclude_none=True)}')
        
        
    –µ—Å—Ç—å answer - —ç—Ç–æ –ø—Ä–æ—Å—Ç–æ —Ç–µ–∫—Å—Ç
    –∞ –µ—Å—Ç—å reply - —ç—Ç–æ —É–∂–µ *–æ—Ç–≤–µ—Ç*

"""

# –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç—ã –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
# bot = Bot(token=BOT_TOKEN)

bot = Bot(
    token=BOT_TOKEN,
    default=DefaultBotProperties(
        parse_mode=ParseMode.HTML
    )
)
dp = Dispatcher()


# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ –∫–æ–º–∞–Ω–¥—É "/start"
# @dp.message(Command(commands=['start']))
# async def process_start_command(message: Message):
#     await message.answer(hello_text)


# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ –∫–æ–º–∞–Ω–¥—É "/help"
@dp.message(Command(commands=['about']))
async def process_about_command(message: Message):
    await message.answer(about_text)


@dp.message(Command("start"))
@dp.message(CommandStart(
    deep_link=True
))
async def cmd_start_help(message: Message):
    await message.answer("–≠—Ç–æ —Å—Ç–∞—Ä—Ç —Å –∫–Ω–æ–ø–∫–æ–π —Å—Ç–∞—Ä—Ç")
# –∫–∞—Å—Ç–æ–º–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã

@dp.message(Command(commands='get_id'))
async def process_get_id_command(message: Message):
    await message.answer(f'ID: {message.chat.id}')


@dp.message(Command(commands="hello"))
async def process_hello_command(message: Message):
    await message.reply(f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}!')


@dp.message(Command(commands='format'))
async def process_f_answer_command(message: Message,
                                   command: CommandObject):
    if command.args is None:
        await message.answer(
            "–û—à–∏–±–∫–∞: –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω—ã –∞—Ä–≥—É–º–µ–Ω—Ç—ã"
        )
        return
    text = command.args
    content = Text(
        "–í–∞—à —Ç–µ–∫—Å—Ç - \n, ",
        Bold(text)
    )
    await message.reply(
        **content.as_kwargs()
    )


@dp.message(Command('dice'))
async def cmd_dice(message: types.Message):
    await message.answer_dice(emoji="üé≤")


@dp.message(Command('stats'))
async def cmd_stats(message: types.Message):
    await message.answer(f'–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: {message.chat.id}\n'
                         f'{message.chat.username}\n'
                         f'{message.chat.first_name}\n'
                         f'{message.chat.last_name}\n'
                         f'–ü—Ä–µ–º–∏—É–º {message.from_user.is_premium}')




# –ù–æ–≤—ã–π –∏–º–ø–æ—Ä—Ç

@dp.message(Command("links"))
async def cmd_links(message: Message):
    links_text = (
        "https://nplus1.ru/news/2024/05/23/voyager-1-science-data"
        "\n"
        "https://t.me/telegram"
    )
    # –°—Å—ã–ª–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∞
    options_1 = LinkPreviewOptions(is_disabled=True)
    await message.answer(
        f"–ù–µ—Ç –ø—Ä–µ–≤—å—é —Å—Å—ã–ª–æ–∫\n{links_text}",
        link_preview_options=options_1
    )

    # -------------------- #

    # –ú–∞–ª–µ–Ω—å–∫–æ–µ –ø—Ä–µ–≤—å—é
    # –î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è prefer_small_media –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —É–∫–∞–∑—ã–≤–∞—Ç—å –µ—â—ë –∏ url
    options_2 = LinkPreviewOptions(
        url="https://nplus1.ru/news/2024/05/23/voyager-1-science-data",
        prefer_small_media=True
    )
    await message.answer(
        f"–ú–∞–ª–µ–Ω—å–∫–æ–µ –ø—Ä–µ–≤—å—é\n{links_text}",
        link_preview_options=options_2
    )

    # -------------------- #

    # –ë–æ–ª—å—à–æ–µ –ø—Ä–µ–≤—å—é
    # –î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è prefer_large_media –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —É–∫–∞–∑—ã–≤–∞—Ç—å –µ—â—ë –∏ url
    options_3 = LinkPreviewOptions(
        url="https://nplus1.ru/news/2024/05/23/voyager-1-science-data",
        prefer_large_media=True
    )
    await message.answer(
        f"–ë–æ–ª—å—à–æ–µ –ø—Ä–µ–≤—å—é\n{links_text}",
        link_preview_options=options_3
    )

    # -------------------- #

    # –ú–æ–∂–Ω–æ —Å–æ—á–µ—Ç–∞—Ç—å: –º–∞–ª–µ–Ω—å–∫–æ–µ –ø—Ä–µ–≤—å—é –∏ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ –Ω–∞–¥ —Ç–µ–∫—Å—Ç–æ–º
    options_4 = LinkPreviewOptions(
        url="https://nplus1.ru/news/2024/05/23/voyager-1-science-data",
        prefer_small_media=True,
        show_above_text=True
    )
    await message.answer(
        f"–ú–∞–ª–µ–Ω—å–∫–æ–µ –ø—Ä–µ–≤—å—é –Ω–∞–¥ —Ç–µ–∫—Å—Ç–æ–º\n{links_text}",
        link_preview_options=options_4
    )

    # -------------------- #

    # –ú–æ–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å, –∫–∞–∫–∞—è —Å—Å—ã–ª–∫–∞ –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –¥–ª—è –ø—Ä–µ–¥–ø–æ—Å–º–æ—Ç—Ä–∞,
    options_5 = LinkPreviewOptions(
        url="https://t.me/telegram"
    )
    await message.answer(
        f"–ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –Ω–µ –ø–µ—Ä–≤–æ–π —Å—Å—ã–ª–∫–∏\n{links_text}",
        link_preview_options=options_5
    )

"""
----------------------------------------------------------------------------------------------
"""


@dp.message()
async def send_echo(message: Message):
    await message.reply(text=message.text)


if __name__ == '__main__':
    dp.run_polling(bot)
